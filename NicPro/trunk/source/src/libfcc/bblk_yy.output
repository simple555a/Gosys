Terminals which are not used

   TOK_BEGIN
   TOK_END
   TOK_INTERFACE
   TOK_INSTRUCTION
   TOK_CONST
   TOK_TRUE
   TOK_FALSE
   TOK_ERROR


Grammar

    0 $accept: program $end

    1 program: TOK_FBLOCK id ';' blk_attributes uuid comments interface implementation

    2 blk_attributes: /* empty */
    3               | TOK_ATTRIBUTE '(' blk_attribute_list ')' ';'

    4 blk_attribute_list: blk_attribute
    5                   | blk_attribute_list ',' blk_attribute

    6 blk_attribute: id

    7 uuid: /* empty */
    8     | uuid_const ';'

    9 uuid_const: TOK_UUID

   10 comments: /* empty */
   11         | TOK_COMMENTS comment_list

   12 comment_list: /* empty */
   13             | comment_list comment

   14 comment: id '=' string ';'

   15 string: TOK_STRING
   16       | string TOK_STRING

   17 interface: /* empty */
   18          | TOK_VAR var_list

   19 var_list: /* empty */
   20         | var_list var_def

   21 var_def: id ':' type_def ';' attribute_part

   22 type_def: basic_type
   23         | array_type

   24 basic_type: TOK_EVENT
   25           | TOK_INTEGER
   26           | TOK_FLOAT
   27           | TOK_BOOL
   28           | TOK_DATE
   29           | TOK_BYTE
   30           | TOK_WORD
   31           | TOK_DOUBLE
   32           | TOK_CHAR
   33           | TOK_SHORT
   34           | TOK_DWORD

   35 array_type: TOK_ARRAY '[' integer_number ']' TOK_OF basic_type

   36 attribute_part: /* empty */
   37               | attribute_list ';'

   38 attribute_list: attribute
   39               | attribute_list ',' attribute

   40 attribute: TOK_IN
   41          | TOK_OUT
   42          | TOK_TIMER '(' integer_number ')'
   43          | TOK_INVOKE '(' id ')'
   44          | TOK_HIDDEN

   45 integer_number: TOK_NUMBER
   46               | TOK_HEXNUMBER

   47 id: TOK_ID

   48 implementation: TOK_IMPLEMENTATION


Terminals, with rules where they appear

$end (0) 0
'(' (40) 3 42 43
')' (41) 3 42 43
',' (44) 5 39
':' (58) 21
';' (59) 1 3 8 14 21 37
'=' (61) 14
'[' (91) 35
']' (93) 35
error (256)
TOK_NUMBER (258) 45
TOK_INTEGER (259) 25
TOK_FLOAT (260) 26
TOK_IN (261) 40
TOK_OUT (262) 41
TOK_BOOL (263) 27
TOK_BEGIN (264)
TOK_END (265)
TOK_VAR (266) 18
TOK_INTERFACE (267)
TOK_IMPLEMENTATION (268) 48
TOK_FBLOCK (269) 1
TOK_INSTRUCTION (270)
TOK_ID (271) 47
TOK_TIMER (272) 42
TOK_INVOKE (273) 43
TOK_CONST (274)
TOK_TRUE (275)
TOK_FALSE (276)
TOK_EVENT (277) 24
TOK_ERROR (278)
TOK_ARRAY (279) 35
TOK_OF (280) 35
TOK_DATE (281) 28
TOK_BYTE (282) 29
TOK_WORD (283) 30
TOK_DOUBLE (284) 31
TOK_CHAR (285) 32
TOK_SHORT (286) 33
TOK_DWORD (287) 34
TOK_HEXNUMBER (288) 46
TOK_UUID (289) 9
TOK_STRING (290) 15 16
TOK_COMMENTS (291) 11
TOK_ATTRIBUTE (292) 3
TOK_HIDDEN (293) 44


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
blk_attributes (49)
    on left: 2 3, on right: 1
blk_attribute_list (50)
    on left: 4 5, on right: 3 5
blk_attribute (51)
    on left: 6, on right: 4 5
uuid (52)
    on left: 7 8, on right: 1
uuid_const (53)
    on left: 9, on right: 8
comments (54)
    on left: 10 11, on right: 1
comment_list (55)
    on left: 12 13, on right: 11 13
comment (56)
    on left: 14, on right: 13
string (57)
    on left: 15 16, on right: 14 16
interface (58)
    on left: 17 18, on right: 1
var_list (59)
    on left: 19 20, on right: 18 20
var_def (60)
    on left: 21, on right: 20
type_def (61)
    on left: 22 23, on right: 21
basic_type (62)
    on left: 24 25 26 27 28 29 30 31 32 33 34, on right: 22 35
array_type (63)
    on left: 35, on right: 23
attribute_part (64)
    on left: 36 37, on right: 21
attribute_list (65)
    on left: 38 39, on right: 37 39
attribute (66)
    on left: 40 41 42 43 44, on right: 38 39
integer_number (67)
    on left: 45 46, on right: 35 42
id (68)
    on left: 47, on right: 1 6 14 21 43
implementation (69)
    on left: 48, on right: 1


state 0

    0 $accept: . program $end

    TOK_FBLOCK  shift, and go to state 1

    program  go to state 2


state 1

    1 program: TOK_FBLOCK . id ';' blk_attributes uuid comments interface implementation

    TOK_ID  shift, and go to state 3

    id  go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

   47 id: TOK_ID .

    $default  reduce using rule 47 (id)


state 4

    1 program: TOK_FBLOCK id . ';' blk_attributes uuid comments interface implementation

    ';'  shift, and go to state 6


state 5

    0 $accept: program $end .

    $default  accept


state 6

    1 program: TOK_FBLOCK id ';' . blk_attributes uuid comments interface implementation

    TOK_ATTRIBUTE  shift, and go to state 7

    $default  reduce using rule 2 (blk_attributes)

    blk_attributes  go to state 8


state 7

    3 blk_attributes: TOK_ATTRIBUTE . '(' blk_attribute_list ')' ';'

    '('  shift, and go to state 9


state 8

    1 program: TOK_FBLOCK id ';' blk_attributes . uuid comments interface implementation

    TOK_UUID  shift, and go to state 10

    $default  reduce using rule 7 (uuid)

    uuid        go to state 11
    uuid_const  go to state 12


state 9

    3 blk_attributes: TOK_ATTRIBUTE '(' . blk_attribute_list ')' ';'

    TOK_ID  shift, and go to state 3

    blk_attribute_list  go to state 13
    blk_attribute       go to state 14
    id                  go to state 15


state 10

    9 uuid_const: TOK_UUID .

    $default  reduce using rule 9 (uuid_const)


state 11

    1 program: TOK_FBLOCK id ';' blk_attributes uuid . comments interface implementation

    TOK_COMMENTS  shift, and go to state 16

    $default  reduce using rule 10 (comments)

    comments  go to state 17


state 12

    8 uuid: uuid_const . ';'

    ';'  shift, and go to state 18


state 13

    3 blk_attributes: TOK_ATTRIBUTE '(' blk_attribute_list . ')' ';'
    5 blk_attribute_list: blk_attribute_list . ',' blk_attribute

    ')'  shift, and go to state 19
    ','  shift, and go to state 20


state 14

    4 blk_attribute_list: blk_attribute .

    $default  reduce using rule 4 (blk_attribute_list)


state 15

    6 blk_attribute: id .

    $default  reduce using rule 6 (blk_attribute)


state 16

   11 comments: TOK_COMMENTS . comment_list

    $default  reduce using rule 12 (comment_list)

    comment_list  go to state 21


state 17

    1 program: TOK_FBLOCK id ';' blk_attributes uuid comments . interface implementation

    TOK_VAR  shift, and go to state 22

    $default  reduce using rule 17 (interface)

    interface  go to state 23


state 18

    8 uuid: uuid_const ';' .

    $default  reduce using rule 8 (uuid)


state 19

    3 blk_attributes: TOK_ATTRIBUTE '(' blk_attribute_list ')' . ';'

    ';'  shift, and go to state 24


state 20

    5 blk_attribute_list: blk_attribute_list ',' . blk_attribute

    TOK_ID  shift, and go to state 3

    blk_attribute  go to state 25
    id             go to state 15


state 21

   11 comments: TOK_COMMENTS comment_list .
   13 comment_list: comment_list . comment

    TOK_ID  shift, and go to state 3

    $default  reduce using rule 11 (comments)

    comment  go to state 26
    id       go to state 27


state 22

   18 interface: TOK_VAR . var_list

    $default  reduce using rule 19 (var_list)

    var_list  go to state 28


state 23

    1 program: TOK_FBLOCK id ';' blk_attributes uuid comments interface . implementation

    TOK_IMPLEMENTATION  shift, and go to state 29

    implementation  go to state 30


state 24

    3 blk_attributes: TOK_ATTRIBUTE '(' blk_attribute_list ')' ';' .

    $default  reduce using rule 3 (blk_attributes)


state 25

    5 blk_attribute_list: blk_attribute_list ',' blk_attribute .

    $default  reduce using rule 5 (blk_attribute_list)


state 26

   13 comment_list: comment_list comment .

    $default  reduce using rule 13 (comment_list)


state 27

   14 comment: id . '=' string ';'

    '='  shift, and go to state 31


state 28

   18 interface: TOK_VAR var_list .
   20 var_list: var_list . var_def

    TOK_ID  shift, and go to state 3

    $default  reduce using rule 18 (interface)

    var_def  go to state 32
    id       go to state 33


state 29

   48 implementation: TOK_IMPLEMENTATION .

    $default  reduce using rule 48 (implementation)


state 30

    1 program: TOK_FBLOCK id ';' blk_attributes uuid comments interface implementation .

    $default  reduce using rule 1 (program)


state 31

   14 comment: id '=' . string ';'

    TOK_STRING  shift, and go to state 34

    string  go to state 35


state 32

   20 var_list: var_list var_def .

    $default  reduce using rule 20 (var_list)


state 33

   21 var_def: id . ':' type_def ';' attribute_part

    ':'  shift, and go to state 36


state 34

   15 string: TOK_STRING .

    $default  reduce using rule 15 (string)


state 35

   14 comment: id '=' string . ';'
   16 string: string . TOK_STRING

    TOK_STRING  shift, and go to state 37
    ';'         shift, and go to state 38


state 36

   21 var_def: id ':' . type_def ';' attribute_part

    TOK_INTEGER  shift, and go to state 39
    TOK_FLOAT    shift, and go to state 40
    TOK_BOOL     shift, and go to state 41
    TOK_EVENT    shift, and go to state 42
    TOK_ARRAY    shift, and go to state 43
    TOK_DATE     shift, and go to state 44
    TOK_BYTE     shift, and go to state 45
    TOK_WORD     shift, and go to state 46
    TOK_DOUBLE   shift, and go to state 47
    TOK_CHAR     shift, and go to state 48
    TOK_SHORT    shift, and go to state 49
    TOK_DWORD    shift, and go to state 50

    type_def    go to state 51
    basic_type  go to state 52
    array_type  go to state 53


state 37

   16 string: string TOK_STRING .

    $default  reduce using rule 16 (string)


state 38

   14 comment: id '=' string ';' .

    $default  reduce using rule 14 (comment)


state 39

   25 basic_type: TOK_INTEGER .

    $default  reduce using rule 25 (basic_type)


state 40

   26 basic_type: TOK_FLOAT .

    $default  reduce using rule 26 (basic_type)


state 41

   27 basic_type: TOK_BOOL .

    $default  reduce using rule 27 (basic_type)


state 42

   24 basic_type: TOK_EVENT .

    $default  reduce using rule 24 (basic_type)


state 43

   35 array_type: TOK_ARRAY . '[' integer_number ']' TOK_OF basic_type

    '['  shift, and go to state 54


state 44

   28 basic_type: TOK_DATE .

    $default  reduce using rule 28 (basic_type)


state 45

   29 basic_type: TOK_BYTE .

    $default  reduce using rule 29 (basic_type)


state 46

   30 basic_type: TOK_WORD .

    $default  reduce using rule 30 (basic_type)


state 47

   31 basic_type: TOK_DOUBLE .

    $default  reduce using rule 31 (basic_type)


state 48

   32 basic_type: TOK_CHAR .

    $default  reduce using rule 32 (basic_type)


state 49

   33 basic_type: TOK_SHORT .

    $default  reduce using rule 33 (basic_type)


state 50

   34 basic_type: TOK_DWORD .

    $default  reduce using rule 34 (basic_type)


state 51

   21 var_def: id ':' type_def . ';' attribute_part

    ';'  shift, and go to state 55


state 52

   22 type_def: basic_type .

    $default  reduce using rule 22 (type_def)


state 53

   23 type_def: array_type .

    $default  reduce using rule 23 (type_def)


state 54

   35 array_type: TOK_ARRAY '[' . integer_number ']' TOK_OF basic_type

    TOK_NUMBER     shift, and go to state 56
    TOK_HEXNUMBER  shift, and go to state 57

    integer_number  go to state 58


state 55

   21 var_def: id ':' type_def ';' . attribute_part

    TOK_IN      shift, and go to state 59
    TOK_OUT     shift, and go to state 60
    TOK_TIMER   shift, and go to state 61
    TOK_INVOKE  shift, and go to state 62
    TOK_HIDDEN  shift, and go to state 63

    $default  reduce using rule 36 (attribute_part)

    attribute_part  go to state 64
    attribute_list  go to state 65
    attribute       go to state 66


state 56

   45 integer_number: TOK_NUMBER .

    $default  reduce using rule 45 (integer_number)


state 57

   46 integer_number: TOK_HEXNUMBER .

    $default  reduce using rule 46 (integer_number)


state 58

   35 array_type: TOK_ARRAY '[' integer_number . ']' TOK_OF basic_type

    ']'  shift, and go to state 67


state 59

   40 attribute: TOK_IN .

    $default  reduce using rule 40 (attribute)


state 60

   41 attribute: TOK_OUT .

    $default  reduce using rule 41 (attribute)


state 61

   42 attribute: TOK_TIMER . '(' integer_number ')'

    '('  shift, and go to state 68


state 62

   43 attribute: TOK_INVOKE . '(' id ')'

    '('  shift, and go to state 69


state 63

   44 attribute: TOK_HIDDEN .

    $default  reduce using rule 44 (attribute)


state 64

   21 var_def: id ':' type_def ';' attribute_part .

    $default  reduce using rule 21 (var_def)


state 65

   37 attribute_part: attribute_list . ';'
   39 attribute_list: attribute_list . ',' attribute

    ';'  shift, and go to state 70
    ','  shift, and go to state 71


state 66

   38 attribute_list: attribute .

    $default  reduce using rule 38 (attribute_list)


state 67

   35 array_type: TOK_ARRAY '[' integer_number ']' . TOK_OF basic_type

    TOK_OF  shift, and go to state 72


state 68

   42 attribute: TOK_TIMER '(' . integer_number ')'

    TOK_NUMBER     shift, and go to state 56
    TOK_HEXNUMBER  shift, and go to state 57

    integer_number  go to state 73


state 69

   43 attribute: TOK_INVOKE '(' . id ')'

    TOK_ID  shift, and go to state 3

    id  go to state 74


state 70

   37 attribute_part: attribute_list ';' .

    $default  reduce using rule 37 (attribute_part)


state 71

   39 attribute_list: attribute_list ',' . attribute

    TOK_IN      shift, and go to state 59
    TOK_OUT     shift, and go to state 60
    TOK_TIMER   shift, and go to state 61
    TOK_INVOKE  shift, and go to state 62
    TOK_HIDDEN  shift, and go to state 63

    attribute  go to state 75


state 72

   35 array_type: TOK_ARRAY '[' integer_number ']' TOK_OF . basic_type

    TOK_INTEGER  shift, and go to state 39
    TOK_FLOAT    shift, and go to state 40
    TOK_BOOL     shift, and go to state 41
    TOK_EVENT    shift, and go to state 42
    TOK_DATE     shift, and go to state 44
    TOK_BYTE     shift, and go to state 45
    TOK_WORD     shift, and go to state 46
    TOK_DOUBLE   shift, and go to state 47
    TOK_CHAR     shift, and go to state 48
    TOK_SHORT    shift, and go to state 49
    TOK_DWORD    shift, and go to state 50

    basic_type  go to state 76


state 73

   42 attribute: TOK_TIMER '(' integer_number . ')'

    ')'  shift, and go to state 77


state 74

   43 attribute: TOK_INVOKE '(' id . ')'

    ')'  shift, and go to state 78


state 75

   39 attribute_list: attribute_list ',' attribute .

    $default  reduce using rule 39 (attribute_list)


state 76

   35 array_type: TOK_ARRAY '[' integer_number ']' TOK_OF basic_type .

    $default  reduce using rule 35 (array_type)


state 77

   42 attribute: TOK_TIMER '(' integer_number ')' .

    $default  reduce using rule 42 (attribute)


state 78

   43 attribute: TOK_INVOKE '(' id ')' .

    $default  reduce using rule 43 (attribute)
